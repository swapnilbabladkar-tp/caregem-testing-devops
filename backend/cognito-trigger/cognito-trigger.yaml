AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Email-service

  SAM Template for email-service

Parameters:
  PrivateSubnets:
    Type: 'AWS::SSM::Parameter::Value<List<String>>'
    Default: /caregem/VpcSubnet
  LambdaSecurityGroupId:
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: /caregem/VpcSg
  AuthorizerLambdaArn:
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: /caregem/AuthorizerLambdaArn
  Stage:
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: /caregem/Stage
  CognitoUserPool:
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: /caregem/CognitoUserPool
  AwsRegion:
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: /caregem/AwsRegion
  UserProfileTableName:
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: /caregem/UserProfileTableName
  MysqlSecret:
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: /caregem/MysqlSecret
  ChimeInstanceArn:
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: /caregem/ChimeInstanceArn
  CaregemS3Config:
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: /caregem/CaregemS3Config
  EmailSource:
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: /caregem/EmailSource
  EmailSourceArn:
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: /caregem/EmailSourceArn
  MaxLoginAttempts:
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: /caregem/MaxLoginAttempts

Globals:
  Function:
    Timeout: 20
    MemorySize: 1024
    Runtime: python3.9
    Architectures:
      - x86_64
    VpcConfig:
      SecurityGroupIds:
        - !Ref LambdaSecurityGroupId
      SubnetIds: !Ref PrivateSubnets
    Environment:
      Variables:
        LOG_LEVEL: 'INFO'
        DB_SECRET_NAME: !Ref MysqlSecret
        DYNAMODB_REGION: !Ref AwsRegion
        AWSREGION: !Ref AwsRegion
        USER_POOL_REGION: !Ref AwsRegion
        USER_PROFILE_TABLE_NAME: !Ref UserProfileTableName
        USER_POOL_ID: !Ref CognitoUserPool
        CHIME_INSTANCE_ARN: !Ref ChimeInstanceArn

Resources:
  UtilsLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      ContentUri: ../layers/utilLayer
      CompatibleRuntimes:
        - python3.9
    Metadata:
      BuildMethod: python3.9
  MessageLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      ContentUri: ../layers/messageLayer
      CompatibleRuntimes:
        - python3.9
    Metadata:
      BuildMethod: python3.9

  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: caregem-secret-manager-lambda-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - secretsmanager:GetSecretValue
                Resource: '*'
        - PolicyName: caregem-cognito-lambda-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - cognito-idp:AdminGetUser
                Resource: '*'
        - PolicyName: caregem-dynamodb-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:GetItem
                  - dynamodb:Scan
                  - dynamodb:Query
                  - dynamodb:BatchGetItem
                Resource: '*'
        - PolicyName: caregem-chime-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - chime:CreateAppInstanceUser
                  - chime:DescribeAppInstanceUser
                Resource: '*'
        - PolicyName: caregem-s3-lambda-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                Resource: 'arn:aws:s3:::*'
        - PolicyName: caregem-sns-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'sns:Publish'
                Resource: '*'
        - PolicyName: caregem-ses-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - ses:SendEmail
                  - ses:SendRawEmail
                Resource: '*'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole

  CognitoTriggerdEmail:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: Cognito-Triggered-Email-Lambda
      CodeUri: ./
      Handler: cognito_email.lambda_handler
      Layers:
        - !Ref UtilsLayer
        - !Ref MessageLayer
      Role: !GetAtt LambdaRole.Arn
      Environment:
        Variables:
          ENVIRONMENT: !Ref Stage
          BUCKET_NAME: !Ref CaregemS3Config
          S3_FILE_NAME: caregem_urls.json

  PreAuthLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: Pre-Auth-Lambda
      CodeUri: ./
      Handler: pre_auth.lambda_handler
      Layers:
        - !Ref UtilsLayer
        - !Ref MessageLayer
      Role: !GetAtt LambdaRole.Arn
      Environment:
        Variables:
          EMAIL_SOURCE: !Ref EmailSource
          EMAIL_SOURCE_ARN: !Ref EmailSourceArn
          MAX_LOGIN_ATTEMPTS: !Ref MaxLoginAttempts

  PostAuthLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: Post-Auth-Lambda
      CodeUri: ./
      Handler: post_auth.lambda_handler
      Layers:
        - !Ref UtilsLayer
      Role: !GetAtt LambdaRole.Arn
